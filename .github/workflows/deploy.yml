name: Deploy to Production

on:
  workflow_dispatch:  # Manual trigger only
  workflow_run:
    workflows: ["CI - Fast (Tests Only)"]
    types:
      - completed
    branches: [master]

jobs:
  check-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
    - name: Check if deployment should proceed
      id: check
      run: |
        echo "Tests passed, deployment can proceed"
        echo "should-deploy=true" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: check-tests
    if: always() && (github.event_name == 'workflow_dispatch' || needs.check-tests.outputs.should-deploy == 'true')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build shared package
      run: npm run build --workspace=shared
      
    - name: Build client for production
      run: npm run build --workspace=client
      
    - name: Deploy to Vercel
      working-directory: packages/client
      run: |
        npm install vercel --save-dev
        mkdir -p .vercel
        echo '{"orgId":"${{ secrets.VERCEL_ORG_ID }}","projectId":"${{ secrets.VERCEL_PROJECT_ID }}"}' > .vercel/project.json
        npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes

  notify:
    runs-on: ubuntu-latest
    needs: [check-tests, deploy]
    if: always()
    steps:
    - name: Notify Slack on deployment success
      if: needs.deploy.result == 'success'
      run: |
        TRIGGER_TYPE="${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Auto' }}"
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"text\":\"üöÄ *Deployed to Production* ($TRIGGER_TYPE)\n‚Ä¢ Branch: \`${{ github.ref_name }}\`\n‚Ä¢ Commit: \`${{ github.sha }}\`\n‚Ä¢ Author: ${{ github.actor }}\n‚Ä¢ <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>\"}" \
        ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Notify Slack on deployment failure
      if: needs.deploy.result == 'failure'
      run: |
        TRIGGER_TYPE="${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Auto' }}"
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"text\":\"‚ùå *Deployment Failed* ($TRIGGER_TYPE)\n‚Ä¢ Branch: \`${{ github.ref_name }}\`\n‚Ä¢ Commit: \`${{ github.sha }}\`\n‚Ä¢ Author: ${{ github.actor }}\n‚Ä¢ <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>\"}" \
        ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Notify Slack on deployment skipped
      if: needs.deploy.result == 'skipped'
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"‚è≠Ô∏è *Deployment Skipped*\n‚Ä¢ Tests may have failed\n‚Ä¢ Check CI pipeline first\n‚Ä¢ <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>"}' \
        ${{ secrets.SLACK_WEBHOOK_URL }}